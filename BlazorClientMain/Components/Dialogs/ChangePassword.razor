@inject IMatDialogService MatDialogService


<EditForm Model="_changePassword" OnValidSubmit="Submit">
    <DialogHeader Title="Edit user"></DialogHeader>
    <MatDialogContent>
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div style="display:flex;flex-direction:column;">
            <MatTextField @bind-Value="_changePassword.CurrentPassword" Label="Current password"></MatTextField>
            <MatTextField @bind-Value="_changePassword.NewPassword" Label="New password"></MatTextField>
            <MatTextField @bind-Value="_changePassword.CofirmPassword" Label="Confirm password"></MatTextField>
        </div>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton Type="submit">Change</MatButton>
    </MatDialogActions>
</EditForm>

@code
{


    [CascadingParameter] public MatDialogReference DialogReference { get; set; }

    [Inject] public IBaseApi apiClient { get; set; }

    private ChangePasswordDto _changePassword = new ChangePasswordDto();


    async Task Submit()
    {
        var output = await apiClient.ChangePassword(_changePassword);
        if (output.Success)
        {
            DialogReference.Close(output);
        }
    }


}